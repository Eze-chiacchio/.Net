// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestBiblioteca3.Context;

namespace TestBiblioteca3.Migrations
{
    [DbContext(typeof(BibliotecaDBContext))]
    [Migration("20200713040337_TEstBiblioteca3.Context.BibliotecaDBContext")]
    partial class TEstBiblioteca3ContextBibliotecaDBContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestBiblioteca3.Models.Alquiler", b =>
                {
                    b.Property<int>("IdAlquiler")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fin");

                    b.Property<DateTime>("Inicio");

                    b.Property<int>("idUser");

                    b.Property<string>("nombre");

                    b.HasKey("IdAlquiler");

                    b.HasIndex("idUser");

                    b.HasIndex("nombre");

                    b.ToTable("alquileres");
                });

            modelBuilder.Entity("TestBiblioteca3.Models.Categoria", b =>
                {
                    b.Property<string>("cate")
                        .ValueGeneratedOnAdd();

                    b.HasKey("cate");

                    b.ToTable("categorias");
                });

            modelBuilder.Entity("TestBiblioteca3.Models.Libro", b =>
                {
                    b.Property<string>("nombre")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("cate");

                    b.Property<bool>("disponible");

                    b.HasKey("nombre");

                    b.HasIndex("cate");

                    b.ToTable("libros");
                });

            modelBuilder.Entity("TestBiblioteca3.Models.Usuario", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido");

                    b.Property<string>("Nombre");

                    b.HasKey("IdUser");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("TestBiblioteca3.Models.Alquiler", b =>
                {
                    b.HasOne("TestBiblioteca3.Models.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("idUser")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TestBiblioteca3.Models.Libro", "libro")
                        .WithMany()
                        .HasForeignKey("nombre");
                });

            modelBuilder.Entity("TestBiblioteca3.Models.Libro", b =>
                {
                    b.HasOne("TestBiblioteca3.Models.Categoria", "categoria")
                        .WithMany()
                        .HasForeignKey("cate");
                });
#pragma warning restore 612, 618
        }
    }
}
